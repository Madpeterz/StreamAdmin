<?php

namespace App\Models;

use YAPF\Framework\DbObjects\GenClass\GenClass as GenClass;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use YAPF\Framework\Responses\DbObjects\SingleLoadReply as SingleLoadReply;
use App\Models\Sets\AvatarSet as AvatarSet;

// Do not edit this file, rerun gen.php to update!
class Botconfig extends genClass
{
    protected $use_table = "botconfig";
    // Data Design
    protected $fields = [
        "id",
        "avatarLink",
        "secret",
        "notecards",
        "ims",
        "invites",
        "inviteGroupUUID",
        "httpMode",
        "httpURL",
    ];
    protected $dataset = [
        "id" => ["type" => "int", "value" => null],
        "avatarLink" => ["type" => "int", "value" => null],
        "secret" => ["type" => "str", "value" => null],
        "notecards" => ["type" => "bool", "value" => 0],
        "ims" => ["type" => "bool", "value" => 0],
        "invites" => ["type" => "bool", "value" => 0],
        "inviteGroupUUID" => ["type" => "str", "value" => null],
        "httpMode" => ["type" => "bool", "value" => 0],
        "httpURL" => ["type" => "str", "value" => null],
    ];
    // Setters
    /**
    * setAvatarLink
    */
    public function setAvatarLink(?int $newValue): UpdateReply
    {
        return $this->updateField("avatarLink", $newValue);
    }
    /**
    * setSecret
    */
    public function setSecret(?string $newValue): UpdateReply
    {
        return $this->updateField("secret", $newValue);
    }
    /**
    * setNotecards
    */
    public function setNotecards(?bool $newValue): UpdateReply
    {
        return $this->updateField("notecards", $newValue);
    }
    /**
    * setIms
    */
    public function setIms(?bool $newValue): UpdateReply
    {
        return $this->updateField("ims", $newValue);
    }
    /**
    * setInvites
    */
    public function setInvites(?bool $newValue): UpdateReply
    {
        return $this->updateField("invites", $newValue);
    }
    /**
    * setInviteGroupUUID
    */
    public function setInviteGroupUUID(?string $newValue): UpdateReply
    {
        return $this->updateField("inviteGroupUUID", $newValue);
    }
    /**
    * setHttpMode
    */
    public function setHttpMode(?bool $newValue): UpdateReply
    {
        return $this->updateField("httpMode", $newValue);
    }
    /**
    * setHttpURL
    */
    public function setHttpURL(?string $newValue): UpdateReply
    {
        return $this->updateField("httpURL", $newValue);
    }
    // Getters
    public function getAvatarLink(): ?int
    {
        return $this->getField("avatarLink");
    }
    public function getSecret(): ?string
    {
        return $this->getField("secret");
    }
    public function getNotecards(): ?bool
    {
        return $this->getField("notecards");
    }
    public function getIms(): ?bool
    {
        return $this->getField("ims");
    }
    public function getInvites(): ?bool
    {
        return $this->getField("invites");
    }
    public function getInviteGroupUUID(): ?string
    {
        return $this->getField("inviteGroupUUID");
    }
    public function getHttpMode(): ?bool
    {
        return $this->getField("httpMode");
    }
    public function getHttpURL(): ?string
    {
        return $this->getField("httpURL");
    }
    // Loaders
    public function loadByAvatarLink(int $avatarLink): SingleLoadReply
    {
        return $this->loadByField(
            "avatarLink",
            $avatarLink
        );
    }
    public function loadBySecret(string $secret): SingleLoadReply
    {
        return $this->loadByField(
            "secret",
            $secret
        );
    }
    public function loadByNotecards(bool $notecards): SingleLoadReply
    {
        return $this->loadByField(
            "notecards",
            $notecards
        );
    }
    public function loadByIms(bool $ims): SingleLoadReply
    {
        return $this->loadByField(
            "ims",
            $ims
        );
    }
    public function loadByInvites(bool $invites): SingleLoadReply
    {
        return $this->loadByField(
            "invites",
            $invites
        );
    }
    public function loadByInviteGroupUUID(string $inviteGroupUUID): SingleLoadReply
    {
        return $this->loadByField(
            "inviteGroupUUID",
            $inviteGroupUUID
        );
    }
    public function loadByHttpMode(bool $httpMode): SingleLoadReply
    {
        return $this->loadByField(
            "httpMode",
            $httpMode
        );
    }
    public function loadByHttpURL(string $httpURL): SingleLoadReply
    {
        return $this->loadByField(
            "httpURL",
            $httpURL
        );
    }
    public function relatedAvatar(?array $limitFields = null): AvatarSet
    {
        $ids = [$this->getAvatarLink()];
        $collection = new AvatarSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
}
// please do not edit this file
