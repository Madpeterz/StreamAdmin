<?php

namespace App\Models;

use YAPF\Framework\DbObjects\GenClass\GenClass as GenClass;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use YAPF\Framework\Responses\DbObjects\SingleLoadReply as SingleLoadReply;
use App\Models\Set\AvatarSet as TestAvatar;

// Do not edit this file, rerun gen.php to update!
class Auditlog extends genClass
{
    protected $use_table = "auditlog";
    // Data Design
    protected $fields = [
        "id",
        "store",
        "sourceid",
        "valuename",
        "oldvalue",
        "newvalue",
        "unixtime",
        "avatarLink",
    ];
    protected $dataset = [
        "id" => ["type" => "int", "value" => null],
        "store" => ["type" => "str", "value" => null],
        "sourceid" => ["type" => "str", "value" => null],
        "valuename" => ["type" => "str", "value" => null],
        "oldvalue" => ["type" => "str", "value" => null],
        "newvalue" => ["type" => "str", "value" => null],
        "unixtime" => ["type" => "int", "value" => null],
        "avatarLink" => ["type" => "int", "value" => null],
    ];
    // Setters
    /**
    * setStore
    */
    public function setStore(?string $newValue): UpdateReply
    {
        return $this->updateField("store", $newValue);
    }
    /**
    * setSourceid
    */
    public function setSourceid(?string $newValue): UpdateReply
    {
        return $this->updateField("sourceid", $newValue);
    }
    /**
    * setValuename
    */
    public function setValuename(?string $newValue): UpdateReply
    {
        return $this->updateField("valuename", $newValue);
    }
    /**
    * setOldvalue
    */
    public function setOldvalue(?string $newValue): UpdateReply
    {
        return $this->updateField("oldvalue", $newValue);
    }
    /**
    * setNewvalue
    */
    public function setNewvalue(?string $newValue): UpdateReply
    {
        return $this->updateField("newvalue", $newValue);
    }
    /**
    * setUnixtime
    */
    public function setUnixtime(?int $newValue): UpdateReply
    {
        return $this->updateField("unixtime", $newValue);
    }
    /**
    * setAvatarLink
    */
    public function setAvatarLink(?int $newValue): UpdateReply
    {
        return $this->updateField("avatarLink", $newValue);
    }
    // Getters
    public function getStore(): ?string
    {
        return $this->getField("store");
    }
    public function getSourceid(): ?string
    {
        return $this->getField("sourceid");
    }
    public function getValuename(): ?string
    {
        return $this->getField("valuename");
    }
    public function getOldvalue(): ?string
    {
        return $this->getField("oldvalue");
    }
    public function getNewvalue(): ?string
    {
        return $this->getField("newvalue");
    }
    public function getUnixtime(): ?int
    {
        return $this->getField("unixtime");
    }
    public function getAvatarLink(): ?int
    {
        return $this->getField("avatarLink");
    }
    // Loaders
    public function loadByStore(string $store): SingleLoadReply
    {
        return $this->loadByField(
            "store",
            $store
        );
    }
    public function loadBySourceid(string $sourceid): SingleLoadReply
    {
        return $this->loadByField(
            "sourceid",
            $sourceid
        );
    }
    public function loadByValuename(string $valuename): SingleLoadReply
    {
        return $this->loadByField(
            "valuename",
            $valuename
        );
    }
    public function loadByOldvalue(string $oldvalue): SingleLoadReply
    {
        return $this->loadByField(
            "oldvalue",
            $oldvalue
        );
    }
    public function loadByNewvalue(string $newvalue): SingleLoadReply
    {
        return $this->loadByField(
            "newvalue",
            $newvalue
        );
    }
    public function loadByUnixtime(int $unixtime): SingleLoadReply
    {
        return $this->loadByField(
            "unixtime",
            $unixtime
        );
    }
    public function loadByAvatarLink(int $avatarLink): SingleLoadReply
    {
        return $this->loadByField(
            "avatarLink",
            $avatarLink
        );
    }
    public function relatedAvatar(?array $limitFields = null): TestAvatar
    {
        $ids = [$this->getAvatarLink()];
        $collection = new TestAvatar();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
}
// please do not edit this file
