<?php

namespace App\Models\Sets;

use YAPF\Framework\Responses\DbObjects\SetsLoadReply as SetsLoadReply;
use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use App\Models\Treevenderpackages as Treevenderpackages;

// Do not edit this file, rerun gen.php to update!
class TreevenderpackagesSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Treevenderpackages");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Treevenderpackages
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Treevenderpackages
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldName, $value): ?Treevenderpackages
    {
        return parent::getObjectByField($fieldName, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Treevenderpackages
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniqueTreevenderLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueTreevenderLinks(): array
    {
        return parent::uniqueArray("treevenderLink");
    }
    /**
     * uniquePackageLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniquePackageLinks(): array
    {
        return parent::uniqueArray("packageLink");
    }
    // Loaders
    /**
     * loadById
    */
    public function loadById(
        int $id,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "id",
            $id,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromIds
    */
    public function loadFromIds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("id", $values);
    }
    /**
     * loadByTreevenderLink
    */
    public function loadByTreevenderLink(
        int $treevenderLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "treevenderLink",
            $treevenderLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromTreevenderLinks
    */
    public function loadFromTreevenderLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("treevenderLink", $values);
    }
    /**
     * loadByPackageLink
    */
    public function loadByPackageLink(
        int $packageLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "packageLink",
            $packageLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromPackageLinks
    */
    public function loadFromPackageLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("packageLink", $values);
    }
    // Related loaders
    public function relatedPackage(?array $limitFields = null): PackageSet
    {
        $ids = $this->uniquePackageLinks();
        $collection = new PackageSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedTreevender(?array $limitFields = null): TreevenderSet
    {
        $ids = $this->uniqueTreevenderLinks();
        $collection = new TreevenderSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
}
