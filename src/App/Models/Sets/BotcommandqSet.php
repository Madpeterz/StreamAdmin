<?php

namespace App\Models\Sets;

use YAPF\Framework\Responses\DbObjects\SetsLoadReply as SetsLoadReply;
use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use App\Models\Botcommandq as Botcommandq;

// Do not edit this file, rerun gen.php to update!
class BotcommandqSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Botcommandq");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Botcommandq
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Botcommandq
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldName, $value): ?Botcommandq
    {
        return parent::getObjectByField($fieldName, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Botcommandq
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniqueCommands
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueCommands(): array
    {
        return parent::uniqueArray("command");
    }
    /**
     * uniqueArgss
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueArgss(): array
    {
        return parent::uniqueArray("args");
    }
    /**
     * uniqueUnixtimes
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueUnixtimes(): array
    {
        return parent::uniqueArray("unixtime");
    }
    // Loaders
    /**
     * loadById
    */
    public function loadById(
        int $id,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "id",
            $id,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromIds
    */
    public function loadFromIds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("id", $values);
    }
    /**
     * loadByCommand
    */
    public function loadByCommand(
        string $command,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "command",
            $command,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromCommands
    */
    public function loadFromCommands(array $values): SetsLoadReply
    {
        return $this->loadIndexes("command", $values);
    }
    /**
     * loadByArgs
    */
    public function loadByArgs(
        string $args,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "args",
            $args,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromArgss
    */
    public function loadFromArgss(array $values): SetsLoadReply
    {
        return $this->loadIndexes("args", $values);
    }
    /**
     * loadByUnixtime
    */
    public function loadByUnixtime(
        int $unixtime,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "unixtime",
            $unixtime,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromUnixtimes
    */
    public function loadFromUnixtimes(array $values): SetsLoadReply
    {
        return $this->loadIndexes("unixtime", $values);
    }
    // Related loaders
}
