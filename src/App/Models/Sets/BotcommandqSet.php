<?php

namespace App\Models\Sets;

use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use App\Models\Botcommandq as Botcommandq;

// Do not edit this file, rerun gen.php to update!
class BotcommandqSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Botcommandq");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Botcommandq
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Botcommandq
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldname, $value): ?Botcommandq
    {
        return parent::getObjectByField($fieldname, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Botcommandq
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniqueCommands
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueCommands(): array
    {
        return parent::uniqueArray("command");
    }
    /**
     * uniqueArgss
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueArgss(): array
    {
        return parent::uniqueArray("args");
    }
    /**
     * uniqueUnixtimes
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueUnixtimes(): array
    {
        return parent::uniqueArray("unixtime");
    }
    // Loaders
    /**
     * loadById
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadById(
        int $id, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "id", 
            $id, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromIds
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromIds(array $values): array
    {
        return $this->loadIndexs("id", $values);
    }
    /**
     * loadByCommand
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByCommand(
        string $command, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "command", 
            $command, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromCommands
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromCommands(array $values): array
    {
        return $this->loadIndexs("command", $values);
    }
    /**
     * loadByArgs
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByArgs(
        string $args, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "args", 
            $args, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromArgss
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromArgss(array $values): array
    {
        return $this->loadIndexs("args", $values);
    }
    /**
     * loadByUnixtime
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUnixtime(
        int $unixtime, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "unixtime", 
            $unixtime, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromUnixtimes
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromUnixtimes(array $values): array
    {
        return $this->loadIndexs("unixtime", $values);
    }
    // Related loaders
}
