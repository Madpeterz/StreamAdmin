<?php

namespace App\Models\Sets;

use YAPF\Framework\Responses\DbObjects\SetsLoadReply as SetsLoadReply;
use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use App\Models\Package as Package;

// Do not edit this file, rerun gen.php to update!
class PackageSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Package");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Package
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Package
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldName, $value): ?Package
    {
        return parent::getObjectByField($fieldName, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Package
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniquePackageUids
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniquePackageUids(): array
    {
        return parent::uniqueArray("packageUid");
    }
    /**
     * uniqueNames
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueNames(): array
    {
        return parent::uniqueArray("name");
    }
    /**
     * uniqueAutodjs
     * returns unique values from the collection matching that field
     * @return array<bool>
     */
    public function uniqueAutodjs(): array
    {
        return parent::uniqueArray("autodj");
    }
    /**
     * uniqueAutodjSizes
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueAutodjSizes(): array
    {
        return parent::uniqueArray("autodjSize");
    }
    /**
     * uniqueListenerss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueListenerss(): array
    {
        return parent::uniqueArray("listeners");
    }
    /**
     * uniqueBitrates
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueBitrates(): array
    {
        return parent::uniqueArray("bitrate");
    }
    /**
     * uniqueTemplateLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueTemplateLinks(): array
    {
        return parent::uniqueArray("templateLink");
    }
    /**
     * uniqueServertypeLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueServertypeLinks(): array
    {
        return parent::uniqueArray("servertypeLink");
    }
    /**
     * uniqueCosts
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueCosts(): array
    {
        return parent::uniqueArray("cost");
    }
    /**
     * uniqueDayss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueDayss(): array
    {
        return parent::uniqueArray("days");
    }
    /**
     * uniqueTextureSoldouts
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueTextureSoldouts(): array
    {
        return parent::uniqueArray("textureSoldout");
    }
    /**
     * uniqueTextureInstockSmalls
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueTextureInstockSmalls(): array
    {
        return parent::uniqueArray("textureInstockSmall");
    }
    /**
     * uniqueTextureInstockSelecteds
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueTextureInstockSelecteds(): array
    {
        return parent::uniqueArray("textureInstockSelected");
    }
    /**
     * uniqueWelcomeNotecardLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueWelcomeNotecardLinks(): array
    {
        return parent::uniqueArray("welcomeNotecardLink");
    }
    /**
     * uniqueSetupNotecardLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueSetupNotecardLinks(): array
    {
        return parent::uniqueArray("setupNotecardLink");
    }
    /**
     * uniqueEnableGroupInvites
     * returns unique values from the collection matching that field
     * @return array<bool>
     */
    public function uniqueEnableGroupInvites(): array
    {
        return parent::uniqueArray("enableGroupInvite");
    }
    // Loaders
    /**
     * loadById
    */
    public function loadById(
        int $id,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "id",
            $id,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromIds
    */
    public function loadFromIds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("id", $values);
    }
    /**
     * loadByPackageUid
    */
    public function loadByPackageUid(
        string $packageUid,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "packageUid",
            $packageUid,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromPackageUids
    */
    public function loadFromPackageUids(array $values): SetsLoadReply
    {
        return $this->loadIndexes("packageUid", $values);
    }
    /**
     * loadByName
    */
    public function loadByName(
        string $name,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "name",
            $name,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromNames
    */
    public function loadFromNames(array $values): SetsLoadReply
    {
        return $this->loadIndexes("name", $values);
    }
    /**
     * loadByAutodj
    */
    public function loadByAutodj(
        bool $autodj,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "autodj",
            $autodj,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromAutodjs
    */
    public function loadFromAutodjs(array $values): SetsLoadReply
    {
        return $this->loadIndexes("autodj", $values);
    }
    /**
     * loadByAutodjSize
    */
    public function loadByAutodjSize(
        string $autodjSize,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "autodjSize",
            $autodjSize,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromAutodjSizes
    */
    public function loadFromAutodjSizes(array $values): SetsLoadReply
    {
        return $this->loadIndexes("autodjSize", $values);
    }
    /**
     * loadByListeners
    */
    public function loadByListeners(
        int $listeners,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "listeners",
            $listeners,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromListenerss
    */
    public function loadFromListenerss(array $values): SetsLoadReply
    {
        return $this->loadIndexes("listeners", $values);
    }
    /**
     * loadByBitrate
    */
    public function loadByBitrate(
        int $bitrate,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "bitrate",
            $bitrate,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromBitrates
    */
    public function loadFromBitrates(array $values): SetsLoadReply
    {
        return $this->loadIndexes("bitrate", $values);
    }
    /**
     * loadByTemplateLink
    */
    public function loadByTemplateLink(
        int $templateLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "templateLink",
            $templateLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromTemplateLinks
    */
    public function loadFromTemplateLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("templateLink", $values);
    }
    /**
     * loadByServertypeLink
    */
    public function loadByServertypeLink(
        int $servertypeLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "servertypeLink",
            $servertypeLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromServertypeLinks
    */
    public function loadFromServertypeLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("servertypeLink", $values);
    }
    /**
     * loadByCost
    */
    public function loadByCost(
        int $cost,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "cost",
            $cost,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromCosts
    */
    public function loadFromCosts(array $values): SetsLoadReply
    {
        return $this->loadIndexes("cost", $values);
    }
    /**
     * loadByDays
    */
    public function loadByDays(
        int $days,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "days",
            $days,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromDayss
    */
    public function loadFromDayss(array $values): SetsLoadReply
    {
        return $this->loadIndexes("days", $values);
    }
    /**
     * loadByTextureSoldout
    */
    public function loadByTextureSoldout(
        string $textureSoldout,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "textureSoldout",
            $textureSoldout,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromTextureSoldouts
    */
    public function loadFromTextureSoldouts(array $values): SetsLoadReply
    {
        return $this->loadIndexes("textureSoldout", $values);
    }
    /**
     * loadByTextureInstockSmall
    */
    public function loadByTextureInstockSmall(
        string $textureInstockSmall,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "textureInstockSmall",
            $textureInstockSmall,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromTextureInstockSmalls
    */
    public function loadFromTextureInstockSmalls(array $values): SetsLoadReply
    {
        return $this->loadIndexes("textureInstockSmall", $values);
    }
    /**
     * loadByTextureInstockSelected
    */
    public function loadByTextureInstockSelected(
        string $textureInstockSelected,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "textureInstockSelected",
            $textureInstockSelected,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromTextureInstockSelecteds
    */
    public function loadFromTextureInstockSelecteds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("textureInstockSelected", $values);
    }
    /**
     * loadByWelcomeNotecardLink
    */
    public function loadByWelcomeNotecardLink(
        int $welcomeNotecardLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "welcomeNotecardLink",
            $welcomeNotecardLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromWelcomeNotecardLinks
    */
    public function loadFromWelcomeNotecardLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("welcomeNotecardLink", $values);
    }
    /**
     * loadBySetupNotecardLink
    */
    public function loadBySetupNotecardLink(
        int $setupNotecardLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "setupNotecardLink",
            $setupNotecardLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromSetupNotecardLinks
    */
    public function loadFromSetupNotecardLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("setupNotecardLink", $values);
    }
    /**
     * loadByEnableGroupInvite
    */
    public function loadByEnableGroupInvite(
        bool $enableGroupInvite,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "enableGroupInvite",
            $enableGroupInvite,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromEnableGroupInvites
    */
    public function loadFromEnableGroupInvites(array $values): SetsLoadReply
    {
        return $this->loadIndexes("enableGroupInvite", $values);
    }
    // Related loaders
    public function relatedNoticenotecard(?array $limitFields=null): NoticenotecardSet
    {
        $ids = $this->uniqueWelcomeNotecardLinks();
        $collection = new NoticenotecardSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedServertypes(?array $limitFields=null): ServertypesSet
    {
        $ids = $this->uniqueServertypeLinks();
        $collection = new ServertypesSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedTemplate(?array $limitFields=null): TemplateSet
    {
        $ids = $this->uniqueTemplateLinks();
        $collection = new TemplateSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedRental(?array $limitFields=null): RentalSet
    {
        $ids = $this->uniqueIds();
        $collection = new RentalSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
    public function relatedStream(?array $limitFields=null): StreamSet
    {
        $ids = $this->uniqueIds();
        $collection = new StreamSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
    public function relatedTransactions(?array $limitFields=null): TransactionsSet
    {
        $ids = $this->uniqueIds();
        $collection = new TransactionsSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
    public function relatedTreevenderpackages(?array $limitFields=null): TreevenderpackagesSet
    {
        $ids = $this->uniqueIds();
        $collection = new TreevenderpackagesSet();
        if($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
}
