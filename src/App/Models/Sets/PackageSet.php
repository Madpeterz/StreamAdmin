<?php

namespace App\Models\Sets;

use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use App\Models\Package as Package;

// Do not edit this file, rerun gen.php to update!
class PackageSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Package");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Package
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Package
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldname, $value): ?Package
    {
        return parent::getObjectByField($fieldname, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Package
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniquePackageUids
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniquePackageUids(): array
    {
        return parent::uniqueArray("packageUid");
    }
    /**
     * uniqueNames
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueNames(): array
    {
        return parent::uniqueArray("name");
    }
    /**
     * uniqueAutodjs
     * returns unique values from the collection matching that field
     * @return array<bool>
     */
    public function uniqueAutodjs(): array
    {
        return parent::uniqueArray("autodj");
    }
    /**
     * uniqueAutodjSizes
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueAutodjSizes(): array
    {
        return parent::uniqueArray("autodjSize");
    }
    /**
     * uniqueListenerss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueListenerss(): array
    {
        return parent::uniqueArray("listeners");
    }
    /**
     * uniqueBitrates
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueBitrates(): array
    {
        return parent::uniqueArray("bitrate");
    }
    /**
     * uniqueTemplateLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueTemplateLinks(): array
    {
        return parent::uniqueArray("templateLink");
    }
    /**
     * uniqueServertypeLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueServertypeLinks(): array
    {
        return parent::uniqueArray("servertypeLink");
    }
    /**
     * uniqueCosts
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueCosts(): array
    {
        return parent::uniqueArray("cost");
    }
    /**
     * uniqueDayss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueDayss(): array
    {
        return parent::uniqueArray("days");
    }
    /**
     * uniqueTextureSoldouts
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueTextureSoldouts(): array
    {
        return parent::uniqueArray("textureSoldout");
    }
    /**
     * uniqueTextureInstockSmalls
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueTextureInstockSmalls(): array
    {
        return parent::uniqueArray("textureInstockSmall");
    }
    /**
     * uniqueTextureInstockSelecteds
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueTextureInstockSelecteds(): array
    {
        return parent::uniqueArray("textureInstockSelected");
    }
    /**
     * uniqueApiTemplates
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueApiTemplates(): array
    {
        return parent::uniqueArray("apiTemplate");
    }
    /**
     * uniqueWelcomeNotecardLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueWelcomeNotecardLinks(): array
    {
        return parent::uniqueArray("welcomeNotecardLink");
    }
    /**
     * uniqueSetupNotecardLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueSetupNotecardLinks(): array
    {
        return parent::uniqueArray("setupNotecardLink");
    }
    /**
     * uniqueEnableGroupInvites
     * returns unique values from the collection matching that field
     * @return array<bool>
     */
    public function uniqueEnableGroupInvites(): array
    {
        return parent::uniqueArray("enableGroupInvite");
    }
    /**
     * uniqueApiAllowAutoSuspends
     * returns unique values from the collection matching that field
     * @return array<bool>
     */
    public function uniqueApiAllowAutoSuspends(): array
    {
        return parent::uniqueArray("apiAllowAutoSuspend");
    }
    /**
     * uniqueApiAutoSuspendDelayHourss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueApiAutoSuspendDelayHourss(): array
    {
        return parent::uniqueArray("apiAutoSuspendDelayHours");
    }
    // Loaders
    /**
     * loadById
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadById(
        int $id, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "id", 
            $id, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromIds
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromIds(array $values): array
    {
        return $this->loadIndexs("id", $values);
    }
    /**
     * loadByPackageUid
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByPackageUid(
        string $packageUid, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "packageUid", 
            $packageUid, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromPackageUids
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromPackageUids(array $values): array
    {
        return $this->loadIndexs("packageUid", $values);
    }
    /**
     * loadByName
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByName(
        string $name, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "name", 
            $name, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromNames
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromNames(array $values): array
    {
        return $this->loadIndexs("name", $values);
    }
    /**
     * loadByAutodj
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAutodj(
        bool $autodj, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "autodj", 
            $autodj, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromAutodjs
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromAutodjs(array $values): array
    {
        return $this->loadIndexs("autodj", $values);
    }
    /**
     * loadByAutodjSize
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAutodjSize(
        string $autodjSize, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "autodjSize", 
            $autodjSize, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromAutodjSizes
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromAutodjSizes(array $values): array
    {
        return $this->loadIndexs("autodjSize", $values);
    }
    /**
     * loadByListeners
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByListeners(
        int $listeners, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "listeners", 
            $listeners, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromListenerss
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromListenerss(array $values): array
    {
        return $this->loadIndexs("listeners", $values);
    }
    /**
     * loadByBitrate
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByBitrate(
        int $bitrate, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "bitrate", 
            $bitrate, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromBitrates
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromBitrates(array $values): array
    {
        return $this->loadIndexs("bitrate", $values);
    }
    /**
     * loadByTemplateLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTemplateLink(
        int $templateLink, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "templateLink", 
            $templateLink, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromTemplateLinks
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromTemplateLinks(array $values): array
    {
        return $this->loadIndexs("templateLink", $values);
    }
    /**
     * loadByServertypeLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByServertypeLink(
        int $servertypeLink, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "servertypeLink", 
            $servertypeLink, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromServertypeLinks
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromServertypeLinks(array $values): array
    {
        return $this->loadIndexs("servertypeLink", $values);
    }
    /**
     * loadByCost
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByCost(
        int $cost, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "cost", 
            $cost, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromCosts
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromCosts(array $values): array
    {
        return $this->loadIndexs("cost", $values);
    }
    /**
     * loadByDays
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByDays(
        int $days, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "days", 
            $days, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromDayss
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromDayss(array $values): array
    {
        return $this->loadIndexs("days", $values);
    }
    /**
     * loadByTextureSoldout
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTextureSoldout(
        string $textureSoldout, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "textureSoldout", 
            $textureSoldout, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromTextureSoldouts
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromTextureSoldouts(array $values): array
    {
        return $this->loadIndexs("textureSoldout", $values);
    }
    /**
     * loadByTextureInstockSmall
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTextureInstockSmall(
        string $textureInstockSmall, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "textureInstockSmall", 
            $textureInstockSmall, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromTextureInstockSmalls
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromTextureInstockSmalls(array $values): array
    {
        return $this->loadIndexs("textureInstockSmall", $values);
    }
    /**
     * loadByTextureInstockSelected
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTextureInstockSelected(
        string $textureInstockSelected, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "textureInstockSelected", 
            $textureInstockSelected, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromTextureInstockSelecteds
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromTextureInstockSelecteds(array $values): array
    {
        return $this->loadIndexs("textureInstockSelected", $values);
    }
    /**
     * loadByApiTemplate
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByApiTemplate(
        string $apiTemplate, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "apiTemplate", 
            $apiTemplate, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromApiTemplates
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromApiTemplates(array $values): array
    {
        return $this->loadIndexs("apiTemplate", $values);
    }
    /**
     * loadByWelcomeNotecardLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByWelcomeNotecardLink(
        int $welcomeNotecardLink, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "welcomeNotecardLink", 
            $welcomeNotecardLink, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromWelcomeNotecardLinks
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromWelcomeNotecardLinks(array $values): array
    {
        return $this->loadIndexs("welcomeNotecardLink", $values);
    }
    /**
     * loadBySetupNotecardLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadBySetupNotecardLink(
        int $setupNotecardLink, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "setupNotecardLink", 
            $setupNotecardLink, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromSetupNotecardLinks
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromSetupNotecardLinks(array $values): array
    {
        return $this->loadIndexs("setupNotecardLink", $values);
    }
    /**
     * loadByEnableGroupInvite
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByEnableGroupInvite(
        bool $enableGroupInvite, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "enableGroupInvite", 
            $enableGroupInvite, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromEnableGroupInvites
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromEnableGroupInvites(array $values): array
    {
        return $this->loadIndexs("enableGroupInvite", $values);
    }
    /**
     * loadByApiAllowAutoSuspend
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByApiAllowAutoSuspend(
        bool $apiAllowAutoSuspend, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "apiAllowAutoSuspend", 
            $apiAllowAutoSuspend, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromApiAllowAutoSuspends
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromApiAllowAutoSuspends(array $values): array
    {
        return $this->loadIndexs("apiAllowAutoSuspend", $values);
    }
    /**
     * loadByApiAutoSuspendDelayHours
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByApiAutoSuspendDelayHours(
        int $apiAutoSuspendDelayHours, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField(
            "apiAutoSuspendDelayHours", 
            $apiAutoSuspendDelayHours, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromApiAutoSuspendDelayHourss
     * @return array<mixed> [status =>  bool, count => integer, message =>  string]
    */
    public function loadFromApiAutoSuspendDelayHourss(array $values): array
    {
        return $this->loadIndexs("apiAutoSuspendDelayHours", $values);
    }
    // Related loaders
    public function relatedNoticenotecard(): NoticenotecardSet
    {
        $ids = $this->uniqueWelcomeNotecardLinks();
        $collection = new NoticenotecardSet();
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedServertypes(): ServertypesSet
    {
        $ids = $this->uniqueServertypeLinks();
        $collection = new ServertypesSet();
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedTemplate(): TemplateSet
    {
        $ids = $this->uniqueTemplateLinks();
        $collection = new TemplateSet();
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedRental(): RentalSet
    {
        $ids = $this->uniqueIds();
        $collection = new RentalSet();
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
    public function relatedStream(): StreamSet
    {
        $ids = $this->uniqueIds();
        $collection = new StreamSet();
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
    public function relatedTransactions(): TransactionsSet
    {
        $ids = $this->uniqueIds();
        $collection = new TransactionsSet();
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
    public function relatedTreevenderpackages(): TreevenderpackagesSet
    {
        $ids = $this->uniqueIds();
        $collection = new TreevenderpackagesSet();
        $collection->loadFromPackageLinks($ids);
        return $collection;
    }
}
