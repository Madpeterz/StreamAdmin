<?php

namespace App\Models\Sets;

use YAPF\Framework\Responses\DbObjects\SetsLoadReply as SetsLoadReply;
use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use App\Models\Rental as Rental;

// Do not edit this file, rerun gen.php to update!
class RentalSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Rental");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Rental
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Rental
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldName, $value): ?Rental
    {
        return parent::getObjectByField($fieldName, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Rental
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniqueAvatarLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueAvatarLinks(): array
    {
        return parent::uniqueArray("avatarLink");
    }
    /**
     * uniqueStreamLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueStreamLinks(): array
    {
        return parent::uniqueArray("streamLink");
    }
    /**
     * uniquePackageLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniquePackageLinks(): array
    {
        return parent::uniqueArray("packageLink");
    }
    /**
     * uniqueNoticeLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueNoticeLinks(): array
    {
        return parent::uniqueArray("noticeLink");
    }
    /**
     * uniqueStartUnixtimes
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueStartUnixtimes(): array
    {
        return parent::uniqueArray("startUnixtime");
    }
    /**
     * uniqueExpireUnixtimes
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueExpireUnixtimes(): array
    {
        return parent::uniqueArray("expireUnixtime");
    }
    /**
     * uniqueRenewalss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueRenewalss(): array
    {
        return parent::uniqueArray("renewals");
    }
    /**
     * uniqueTotalAmounts
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueTotalAmounts(): array
    {
        return parent::uniqueArray("totalAmount");
    }
    /**
     * uniqueMessages
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueMessages(): array
    {
        return parent::uniqueArray("message");
    }
    /**
     * uniqueRentalUids
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueRentalUids(): array
    {
        return parent::uniqueArray("rentalUid");
    }
    // Loaders
    /**
     * loadById
    */
    public function loadById(
        int $id,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "id",
            $id,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromIds
    */
    public function loadFromIds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("id", $values);
    }
    /**
     * loadByAvatarLink
    */
    public function loadByAvatarLink(
        int $avatarLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "avatarLink",
            $avatarLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromAvatarLinks
    */
    public function loadFromAvatarLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("avatarLink", $values);
    }
    /**
     * loadByStreamLink
    */
    public function loadByStreamLink(
        int $streamLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "streamLink",
            $streamLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromStreamLinks
    */
    public function loadFromStreamLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("streamLink", $values);
    }
    /**
     * loadByPackageLink
    */
    public function loadByPackageLink(
        int $packageLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "packageLink",
            $packageLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromPackageLinks
    */
    public function loadFromPackageLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("packageLink", $values);
    }
    /**
     * loadByNoticeLink
    */
    public function loadByNoticeLink(
        int $noticeLink,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "noticeLink",
            $noticeLink,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromNoticeLinks
    */
    public function loadFromNoticeLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("noticeLink", $values);
    }
    /**
     * loadByStartUnixtime
    */
    public function loadByStartUnixtime(
        int $startUnixtime,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "startUnixtime",
            $startUnixtime,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromStartUnixtimes
    */
    public function loadFromStartUnixtimes(array $values): SetsLoadReply
    {
        return $this->loadIndexes("startUnixtime", $values);
    }
    /**
     * loadByExpireUnixtime
    */
    public function loadByExpireUnixtime(
        int $expireUnixtime,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "expireUnixtime",
            $expireUnixtime,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromExpireUnixtimes
    */
    public function loadFromExpireUnixtimes(array $values): SetsLoadReply
    {
        return $this->loadIndexes("expireUnixtime", $values);
    }
    /**
     * loadByRenewals
    */
    public function loadByRenewals(
        int $renewals,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "renewals",
            $renewals,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromRenewalss
    */
    public function loadFromRenewalss(array $values): SetsLoadReply
    {
        return $this->loadIndexes("renewals", $values);
    }
    /**
     * loadByTotalAmount
    */
    public function loadByTotalAmount(
        int $totalAmount,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "totalAmount",
            $totalAmount,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromTotalAmounts
    */
    public function loadFromTotalAmounts(array $values): SetsLoadReply
    {
        return $this->loadIndexes("totalAmount", $values);
    }
    /**
     * loadByMessage
    */
    public function loadByMessage(
        string $message,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "message",
            $message,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromMessages
    */
    public function loadFromMessages(array $values): SetsLoadReply
    {
        return $this->loadIndexes("message", $values);
    }
    /**
     * loadByRentalUid
    */
    public function loadByRentalUid(
        string $rentalUid,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "rentalUid",
            $rentalUid,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromRentalUids
    */
    public function loadFromRentalUids(array $values): SetsLoadReply
    {
        return $this->loadIndexes("rentalUid", $values);
    }
    // Related loaders
    public function relatedDetail(?array $limitFields = null): DetailSet
    {
        $ids = $this->uniqueIds();
        $collection = new DetailSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromRentalLinks($ids);
        return $collection;
    }
    public function relatedNotecard(?array $limitFields = null): NotecardSet
    {
        $ids = $this->uniqueIds();
        $collection = new NotecardSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromRentalLinks($ids);
        return $collection;
    }
    public function relatedAvatar(?array $limitFields = null): AvatarSet
    {
        $ids = $this->uniqueAvatarLinks();
        $collection = new AvatarSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedNotice(?array $limitFields = null): NoticeSet
    {
        $ids = $this->uniqueNoticeLinks();
        $collection = new NoticeSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedPackage(?array $limitFields = null): PackageSet
    {
        $ids = $this->uniquePackageLinks();
        $collection = new PackageSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedStream(?array $limitFields = null): StreamSet
    {
        $ids = $this->uniqueStreamLinks();
        $collection = new StreamSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedRentalnoticeptout(?array $limitFields = null): RentalnoticeptoutSet
    {
        $ids = $this->uniqueIds();
        $collection = new RentalnoticeptoutSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromRentalLinks($ids);
        return $collection;
    }
}
