<?php

namespace App\Models;

use YAPF\Framework\DbObjects\GenClass\GenClass as GenClass;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use YAPF\Framework\Responses\DbObjects\SingleLoadReply as SingleLoadReply;
use App\Models\Set\RentalSet as TestRental;
use App\Models\Set\PackageSet as TestPackage;
use App\Models\Set\ServerSet as TestServer;
use App\Models\Set\TransactionsSet as TestTransactions;

// Do not edit this file, rerun gen.php to update!
class Stream extends genClass
{
    protected $use_table = "stream";
    // Data Design
    protected $fields = [
        "id",
        "serverLink",
        "rentalLink",
        "packageLink",
        "port",
        "needWork",
        "adminUsername",
        "adminPassword",
        "djPassword",
        "streamUid",
        "mountpoint",
    ];
    protected $dataset = [
        "id" => ["type" => "int", "value" => null],
        "serverLink" => ["type" => "int", "value" => null],
        "rentalLink" => ["type" => "int", "value" => null],
        "packageLink" => ["type" => "int", "value" => null],
        "port" => ["type" => "int", "value" => null],
        "needWork" => ["type" => "bool", "value" => 0],
        "adminUsername" => ["type" => "str", "value" => null],
        "adminPassword" => ["type" => "str", "value" => null],
        "djPassword" => ["type" => "str", "value" => null],
        "streamUid" => ["type" => "str", "value" => null],
        "mountpoint" => ["type" => "str", "value" => null],
    ];
    // Setters
    /**
    * setServerLink
    */
    public function setServerLink(?int $newValue): UpdateReply
    {
        return $this->updateField("serverLink", $newValue);
    }
    /**
    * setRentalLink
    */
    public function setRentalLink(?int $newValue): UpdateReply
    {
        return $this->updateField("rentalLink", $newValue);
    }
    /**
    * setPackageLink
    */
    public function setPackageLink(?int $newValue): UpdateReply
    {
        return $this->updateField("packageLink", $newValue);
    }
    /**
    * setPort
    */
    public function setPort(?int $newValue): UpdateReply
    {
        return $this->updateField("port", $newValue);
    }
    /**
    * setNeedWork
    */
    public function setNeedWork(?bool $newValue): UpdateReply
    {
        return $this->updateField("needWork", $newValue);
    }
    /**
    * setAdminUsername
    */
    public function setAdminUsername(?string $newValue): UpdateReply
    {
        return $this->updateField("adminUsername", $newValue);
    }
    /**
    * setAdminPassword
    */
    public function setAdminPassword(?string $newValue): UpdateReply
    {
        return $this->updateField("adminPassword", $newValue);
    }
    /**
    * setDjPassword
    */
    public function setDjPassword(?string $newValue): UpdateReply
    {
        return $this->updateField("djPassword", $newValue);
    }
    /**
    * setStreamUid
    */
    public function setStreamUid(?string $newValue): UpdateReply
    {
        return $this->updateField("streamUid", $newValue);
    }
    /**
    * setMountpoint
    */
    public function setMountpoint(?string $newValue): UpdateReply
    {
        return $this->updateField("mountpoint", $newValue);
    }
    // Getters
    public function getServerLink(): ?int
    {
        return $this->getField("serverLink");
    }
    public function getRentalLink(): ?int
    {
        return $this->getField("rentalLink");
    }
    public function getPackageLink(): ?int
    {
        return $this->getField("packageLink");
    }
    public function getPort(): ?int
    {
        return $this->getField("port");
    }
    public function getNeedWork(): ?bool
    {
        return $this->getField("needWork");
    }
    public function getAdminUsername(): ?string
    {
        return $this->getField("adminUsername");
    }
    public function getAdminPassword(): ?string
    {
        return $this->getField("adminPassword");
    }
    public function getDjPassword(): ?string
    {
        return $this->getField("djPassword");
    }
    public function getStreamUid(): ?string
    {
        return $this->getField("streamUid");
    }
    public function getMountpoint(): ?string
    {
        return $this->getField("mountpoint");
    }
    // Loaders
    public function loadByServerLink(int $serverLink): SingleLoadReply
    {
        return $this->loadByField(
            "serverLink",
            $serverLink
        );
    }
    public function loadByRentalLink(int $rentalLink): SingleLoadReply
    {
        return $this->loadByField(
            "rentalLink",
            $rentalLink
        );
    }
    public function loadByPackageLink(int $packageLink): SingleLoadReply
    {
        return $this->loadByField(
            "packageLink",
            $packageLink
        );
    }
    public function loadByPort(int $port): SingleLoadReply
    {
        return $this->loadByField(
            "port",
            $port
        );
    }
    public function loadByNeedWork(bool $needWork): SingleLoadReply
    {
        return $this->loadByField(
            "needWork",
            $needWork
        );
    }
    public function loadByAdminUsername(string $adminUsername): SingleLoadReply
    {
        return $this->loadByField(
            "adminUsername",
            $adminUsername
        );
    }
    public function loadByAdminPassword(string $adminPassword): SingleLoadReply
    {
        return $this->loadByField(
            "adminPassword",
            $adminPassword
        );
    }
    public function loadByDjPassword(string $djPassword): SingleLoadReply
    {
        return $this->loadByField(
            "djPassword",
            $djPassword
        );
    }
    public function loadByStreamUid(string $streamUid): SingleLoadReply
    {
        return $this->loadByField(
            "streamUid",
            $streamUid
        );
    }
    public function loadByMountpoint(string $mountpoint): SingleLoadReply
    {
        return $this->loadByField(
            "mountpoint",
            $mountpoint
        );
    }
    public function relatedRental(?array $limitFields = null): TestRental
    {
        $ids = [$this->getId()];
        $collection = new TestRental();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromStreamLinks($ids);
        return $collection;
    }
    public function relatedPackage(?array $limitFields = null): TestPackage
    {
        $ids = [$this->getPackageLink()];
        $collection = new TestPackage();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedServer(?array $limitFields = null): TestServer
    {
        $ids = [$this->getServerLink()];
        $collection = new TestServer();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedTransactions(?array $limitFields = null): TestTransactions
    {
        $ids = [$this->getId()];
        $collection = new TestTransactions();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromStreamLinks($ids);
        return $collection;
    }
}
// please do not edit this file
