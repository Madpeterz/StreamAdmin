<?php

namespace App\Models\Set;

use YAPF\Framework\Responses\DbObjects\SetsLoadReply as SetsLoadReply;
use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use App\Models\Marketplacecoupons as Marketplacecoupons;

// Do not edit this file, rerun gen.php to update!
class MarketplacecouponsSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\\Models\\Marketplacecoupons");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Marketplacecoupons
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Marketplacecoupons
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldName, $value): ?Marketplacecoupons
    {
        return parent::getObjectByField($fieldName, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Marketplacecoupons
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniqueCosts
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueCosts(): array
    {
        return parent::uniqueArray("cost");
    }
    /**
     * uniqueListingids
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueListingids(): array
    {
        return parent::uniqueArray("listingid");
    }
    /**
     * uniqueCredits
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueCredits(): array
    {
        return parent::uniqueArray("credit");
    }
    /**
     * uniqueClaimss
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueClaimss(): array
    {
        return parent::uniqueArray("claims");
    }
    /**
     * uniqueLastClaims
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueLastClaims(): array
    {
        return parent::uniqueArray("lastClaim");
    }
    // Loaders
    /**
     * loadById
    */
    public function loadById(
        int $id,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "id",
            $id,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromIds
    */
    public function loadFromIds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("id", $values);
    }
    /**
     * loadByCost
    */
    public function loadByCost(
        int $cost,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "cost",
            $cost,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromCosts
    */
    public function loadFromCosts(array $values): SetsLoadReply
    {
        return $this->loadIndexes("cost", $values);
    }
    /**
     * loadByListingid
    */
    public function loadByListingid(
        int $listingid,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "listingid",
            $listingid,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromListingids
    */
    public function loadFromListingids(array $values): SetsLoadReply
    {
        return $this->loadIndexes("listingid", $values);
    }
    /**
     * loadByCredit
    */
    public function loadByCredit(
        int $credit,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "credit",
            $credit,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromCredits
    */
    public function loadFromCredits(array $values): SetsLoadReply
    {
        return $this->loadIndexes("credit", $values);
    }
    /**
     * loadByClaims
    */
    public function loadByClaims(
        int $claims,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "claims",
            $claims,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromClaimss
    */
    public function loadFromClaimss(array $values): SetsLoadReply
    {
        return $this->loadIndexes("claims", $values);
    }
    /**
     * loadByLastClaim
    */
    public function loadByLastClaim(
        int $lastClaim,
        int $limit = 0,
        string $orderBy = "id",
        string $orderDir = "DESC"
    ): SetsLoadReply {
        return $this->loadOnField(
            "lastClaim",
            $lastClaim,
            $limit,
            $orderBy,
            $orderDir
        );
    }
    /**
     * loadFromLastClaims
    */
    public function loadFromLastClaims(array $values): SetsLoadReply
    {
        return $this->loadIndexes("lastClaim", $values);
    }
    // Related loaders
}
