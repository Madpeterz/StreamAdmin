<?php

namespace App\Models;

use YAPF\Framework\DbObjects\GenClass\GenClass as GenClass;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use YAPF\Framework\Responses\DbObjects\SingleLoadReply as SingleLoadReply;
use App\Models\Sets\NotecardSet as NotecardSet;
use App\Models\Sets\NoticenotecardSet as NoticenotecardSet;
use App\Models\Sets\RentalSet as RentalSet;
use App\Models\Sets\RentalnoticeptoutSet as RentalnoticeptoutSet;

// Do not edit this file, rerun gen.php to update!
class Notice extends genClass
{
    protected $use_table = "notice";
    // Data Design
    protected $fields = [
        "id",
        "name",
        "imMessage",
        "sendObjectIM",
        "useBot",
        "sendNotecard",
        "notecardDetail",
        "hoursRemaining",
        "noticeNotecardLink",
    ];
    protected $dataset = [
        "id" => ["type" => "int", "value" => null],
        "name" => ["type" => "str", "value" => null],
        "imMessage" => ["type" => "str", "value" => null],
        "sendObjectIM" => ["type" => "bool", "value" => 1],
        "useBot" => ["type" => "bool", "value" => 0],
        "sendNotecard" => ["type" => "bool", "value" => 0],
        "notecardDetail" => ["type" => "str", "value" => null],
        "hoursRemaining" => ["type" => "int", "value" => 0],
        "noticeNotecardLink" => ["type" => "int", "value" => 1],
    ];
    // Setters
    /**
    * setName
    */
    public function setName(?string $newValue): UpdateReply
    {
        return $this->updateField("name", $newValue);
    }
    /**
    * setImMessage
    */
    public function setImMessage(?string $newValue): UpdateReply
    {
        return $this->updateField("imMessage", $newValue);
    }
    /**
    * setSendObjectIM
    */
    public function setSendObjectIM(?bool $newValue): UpdateReply
    {
        return $this->updateField("sendObjectIM", $newValue);
    }
    /**
    * setUseBot
    */
    public function setUseBot(?bool $newValue): UpdateReply
    {
        return $this->updateField("useBot", $newValue);
    }
    /**
    * setSendNotecard
    */
    public function setSendNotecard(?bool $newValue): UpdateReply
    {
        return $this->updateField("sendNotecard", $newValue);
    }
    /**
    * setNotecardDetail
    */
    public function setNotecardDetail(?string $newValue): UpdateReply
    {
        return $this->updateField("notecardDetail", $newValue);
    }
    /**
    * setHoursRemaining
    */
    public function setHoursRemaining(?int $newValue): UpdateReply
    {
        return $this->updateField("hoursRemaining", $newValue);
    }
    /**
    * setNoticeNotecardLink
    */
    public function setNoticeNotecardLink(?int $newValue): UpdateReply
    {
        return $this->updateField("noticeNotecardLink", $newValue);
    }
    // Getters
    public function getName(): ?string
    {
        return $this->getField("name");
    }
    public function getImMessage(): ?string
    {
        return $this->getField("imMessage");
    }
    public function getSendObjectIM(): ?bool
    {
        return $this->getField("sendObjectIM");
    }
    public function getUseBot(): ?bool
    {
        return $this->getField("useBot");
    }
    public function getSendNotecard(): ?bool
    {
        return $this->getField("sendNotecard");
    }
    public function getNotecardDetail(): ?string
    {
        return $this->getField("notecardDetail");
    }
    public function getHoursRemaining(): ?int
    {
        return $this->getField("hoursRemaining");
    }
    public function getNoticeNotecardLink(): ?int
    {
        return $this->getField("noticeNotecardLink");
    }
    // Loaders
    public function loadByName(string $name): SingleLoadReply
    {
        return $this->loadByField(
            "name",
            $name
        );
    }
    public function loadByImMessage(string $imMessage): SingleLoadReply
    {
        return $this->loadByField(
            "imMessage",
            $imMessage
        );
    }
    public function loadBySendObjectIM(bool $sendObjectIM): SingleLoadReply
    {
        return $this->loadByField(
            "sendObjectIM",
            $sendObjectIM
        );
    }
    public function loadByUseBot(bool $useBot): SingleLoadReply
    {
        return $this->loadByField(
            "useBot",
            $useBot
        );
    }
    public function loadBySendNotecard(bool $sendNotecard): SingleLoadReply
    {
        return $this->loadByField(
            "sendNotecard",
            $sendNotecard
        );
    }
    public function loadByNotecardDetail(string $notecardDetail): SingleLoadReply
    {
        return $this->loadByField(
            "notecardDetail",
            $notecardDetail
        );
    }
    public function loadByHoursRemaining(int $hoursRemaining): SingleLoadReply
    {
        return $this->loadByField(
            "hoursRemaining",
            $hoursRemaining
        );
    }
    public function loadByNoticeNotecardLink(int $noticeNotecardLink): SingleLoadReply
    {
        return $this->loadByField(
            "noticeNotecardLink",
            $noticeNotecardLink
        );
    }
    public function relatedNotecard(?array $limitFields = null): NotecardSet
    {
        $ids = [$this->getId()];
        $collection = new NotecardSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromNoticeLinks($ids);
        return $collection;
    }
    public function relatedNoticenotecard(?array $limitFields = null): NoticenotecardSet
    {
        $ids = [$this->getNoticeNotecardLink()];
        $collection = new NoticenotecardSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromIds($ids);
        return $collection;
    }
    public function relatedRental(?array $limitFields = null): RentalSet
    {
        $ids = [$this->getId()];
        $collection = new RentalSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromNoticeLinks($ids);
        return $collection;
    }
    public function relatedRentalnoticeptout(?array $limitFields = null): RentalnoticeptoutSet
    {
        $ids = [$this->getId()];
        $collection = new RentalnoticeptoutSet();
        if ($limitFields !== null) {
            $collection->limitFields($limitFields);
        }
        $collection->loadFromNoticeLinks($ids);
        return $collection;
    }
}
// please do not edit this file
