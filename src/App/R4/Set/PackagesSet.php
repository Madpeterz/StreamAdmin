<?php

namespace App\R4\Set;

use YAPF\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use App\R4\Model\Packages as Packages;

// Do not edit this file, rerun gen.php to update!
class PackagesSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\R4\Model\Packages");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Packages
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Packages
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldname, $value): ?Packages
    {
        return parent::getObjectByField($fieldname, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Packages
    {
        return parent::current();
    }
    // Loaders
    /**
     * loadByName
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByName(
                    string $name, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("name", $name, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByStreamtype
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByStreamtype(
                    string $streamtype, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("streamtype", $streamtype, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByStreamrate
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByStreamrate(
                    string $streamrate, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("streamrate", $streamrate, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUsers
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUsers(
                    float $users, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("users", $users, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByLcost
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByLcost(
                    float $Lcost, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("Lcost", $Lcost, $limit, $orderBy, $orderDir);
    }
    /**
     * loadBySublength
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadBySublength(
                    int $sublength, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("sublength", $sublength, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByMaintexture
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByMaintexture(
                    string $maintexture, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("maintexture", $maintexture, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByInfotexture
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByInfotexture(
                    string $infotexture, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("infotexture", $infotexture, $limit, $orderBy, $orderDir);
    }
    /**
     * loadBySoldouttexture
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadBySoldouttexture(
                    string $soldouttexture, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("soldouttexture", $soldouttexture, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAutoDJ
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAutoDJ(
                    int $autoDJ, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("autoDJ", $autoDJ, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUse_addon_field_1
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUse_addon_field_1(
                    int $use_addon_field_1, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("use_addon_field_1", $use_addon_field_1, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUse_addon_field_2
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUse_addon_field_2(
                    int $use_addon_field_2, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("use_addon_field_2", $use_addon_field_2, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUse_addon_field_3
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUse_addon_field_3(
                    int $use_addon_field_3, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("use_addon_field_3", $use_addon_field_3, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUse_addon_field_4
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUse_addon_field_4(
                    int $use_addon_field_4, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("use_addon_field_4", $use_addon_field_4, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field_1
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field_1(
                    string $addon_field_1, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field_1", $addon_field_1, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field_2
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field_2(
                    string $addon_field_2, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field_2", $addon_field_2, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field_3
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field_3(
                    string $addon_field_3, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field_3", $addon_field_3, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field_4
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field_4(
                    string $addon_field_4, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field_4", $addon_field_4, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field1_default
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field1_default(
                    string $addon_field1_default, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field1_default", $addon_field1_default, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field2_default
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field2_default(
                    string $addon_field2_default, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field2_default", $addon_field2_default, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field3_default
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field3_default(
                    string $addon_field3_default, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field3_default", $addon_field3_default, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAddon_field4_default
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAddon_field4_default(
                    string $addon_field4_default, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("addon_field4_default", $addon_field4_default, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByEnable_ans
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByEnable_ans(
                    int $enable_ans, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("enable_ans", $enable_ans, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAns_product_id
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAns_product_id(
                    int $ans_product_id, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("ans_product_id", $ans_product_id, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByEnable_invites
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByEnable_invites(
                    int $enable_invites, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("enable_invites", $enable_invites, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUse_vender_config_id
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUse_vender_config_id(
                    int $use_vender_config_id, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("use_vender_config_id", $use_vender_config_id, $limit, $orderBy, $orderDir);
    }
}
