<?php

namespace App\R4\Set;

use YAPF\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use App\R4\Model\Sales_tracking as Sales_tracking;

// Do not edit this file, rerun gen.php to update!
class Sales_trackingSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\R4\Model\Sales_tracking");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Sales_tracking
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Sales_tracking
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldname, $value): ?Sales_tracking
    {
        return parent::getObjectByField($fieldname, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Sales_tracking
    {
        return parent::current();
    }
    // Loaders
    /**
     * loadByResellerid
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByResellerid(
                    int $resellerid, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("resellerid", $resellerid, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByVenderid
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByVenderid(
                    int $venderid, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("venderid", $venderid, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByUserid
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByUserid(
                    int $userid, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("userid", $userid, $limit, $orderBy, $orderDir);
    }
    /**
     * loadBySalemode
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadBySalemode(
                    int $salemode, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("salemode", $salemode, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAmount
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAmount(
                    int $amount, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("amount", $amount, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByDate
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByDate(
                    string $date, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("date", $date, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByTime
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTime(
                    string $time, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("time", $time, $limit, $orderBy, $orderDir);
    }
    /**
     * loadBySLname
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadBySLname(
                    string $SLname, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("SLname", $SLname, $limit, $orderBy, $orderDir);
    }
}
