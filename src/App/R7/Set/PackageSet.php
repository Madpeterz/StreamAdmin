<?php

namespace App\R7\Set;

use YAPF\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use App\R7\Model\Package as Package;

// Do not edit this file, rerun gen.php to update!
class PackageSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\R7\Model\Package");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Package
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Package
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldname, $value): ?Package
    {
        return parent::getObjectByField($fieldname, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Package
    {
        return parent::current();
    }
    // Loaders
    /**
     * loadByPackageUid
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByPackageUid(
                    string $packageUid, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("packageUid", $packageUid, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByName
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByName(
                    string $name, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("name", $name, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAutodj
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAutodj(
                    bool $autodj, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("autodj", $autodj, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByAutodjSize
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByAutodjSize(
                    string $autodjSize, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("autodjSize", $autodjSize, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByListeners
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByListeners(
                    int $listeners, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("listeners", $listeners, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByBitrate
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByBitrate(
                    int $bitrate, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("bitrate", $bitrate, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByTemplateLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTemplateLink(
                    int $templateLink, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("templateLink", $templateLink, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByServertypeLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByServertypeLink(
                    int $servertypeLink, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("servertypeLink", $servertypeLink, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByCost
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByCost(
                    int $cost, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("cost", $cost, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByDays
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByDays(
                    int $days, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("days", $days, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByTextureSoldout
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTextureSoldout(
                    string $textureSoldout, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("textureSoldout", $textureSoldout, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByTextureInstockSmall
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTextureInstockSmall(
                    string $textureInstockSmall, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("textureInstockSmall", $textureInstockSmall, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByTextureInstockSelected
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByTextureInstockSelected(
                    string $textureInstockSelected, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("textureInstockSelected", $textureInstockSelected, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByApiTemplate
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByApiTemplate(
                    string $apiTemplate, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("apiTemplate", $apiTemplate, $limit, $orderBy, $orderDir);
    }
    /**
     * loadByWelcomeNotecardLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadByWelcomeNotecardLink(
                    int $welcomeNotecardLink, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("welcomeNotecardLink", $welcomeNotecardLink, $limit, $orderBy, $orderDir);
    }
    /**
     * loadBySetupNotecardLink
     * @return mixed[] [status =>  bool, count => integer, message =>  string]
    */
    public function loadBySetupNotecardLink(
                    int $setupNotecardLink, 
                    int $limit = 0, 
                    string $orderBy = "id", 
                    string $orderDir = "DESC"
    ): array
    {
        return $this->loadByField("setupNotecardLink", $setupNotecardLink, $limit, $orderBy, $orderDir);
    }
}
