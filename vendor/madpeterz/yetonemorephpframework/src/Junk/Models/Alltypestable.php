<?php

namespace YAPF\Junk\Models;

use YAPF\DbObjects\GenClass\GenClass as GenClass;

// Do not edit this file, rerun gen.php to update!
class Alltypestable extends genClass
{
    protected $use_table = "test.alltypestable";
    // Data Design
    protected $dataset = [
        "id" => ["type" => "int", "value" => null],
        "stringfield" => ["type" => "str", "value" => null],
        "intfield" => ["type" => "int", "value" => null],
        "floatfield" => ["type" => "float", "value" => null],
        "boolfield" => ["type" => "bool", "value" => 0],
    ];
    // Getters
    public function getStringfield(): ?string
    {
        return $this->getField("stringfield");
    }
    public function getIntfield(): ?int
    {
        return $this->getField("intfield");
    }
    public function getFloatfield(): ?float
    {
        return $this->getField("floatfield");
    }
    public function getBoolfield(): ?bool
    {
        return $this->getField("boolfield");
    }
    // Setters
    /**
    * setStringfield
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setStringfield(?string $newvalue): array
    {
        return $this->updateField("stringfield", $newvalue);
    }
    /**
    * setIntfield
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setIntfield(?int $newvalue): array
    {
        return $this->updateField("intfield", $newvalue);
    }
    /**
    * setFloatfield
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setFloatfield(?float $newvalue): array
    {
        return $this->updateField("floatfield", $newvalue);
    }
    /**
    * setBoolfield
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setBoolfield(?bool $newvalue): array
    {
        return $this->updateField("boolfield", $newvalue);
    }
    // Loaders
    public function loadByStringfield(string $stringfield): bool
    {
        return $this->loadByField("stringfield", $stringfield);
    }
    public function loadByIntfield(int $intfield): bool
    {
        return $this->loadByField("intfield", $intfield);
    }
    public function loadByFloatfield(float $floatfield): bool
    {
        return $this->loadByField("floatfield", $floatfield);
    }
    public function loadByBoolfield(bool $boolfield): bool
    {
        return $this->loadByField("boolfield", $boolfield);
    }
}
// please do not edit this file
