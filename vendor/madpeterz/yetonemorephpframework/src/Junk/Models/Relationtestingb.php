<?php

namespace YAPF\Junk\Models;

use YAPF\DbObjects\GenClass\GenClass as GenClass;

// Do not edit this file, rerun gen.php to update!
class Relationtestingb extends genClass
{
    protected $use_table = "test.relationtestingb";
    // Data Design
    protected $dataset = [
        "id" => ["type" => "int", "value" => null],
        "extended1" => ["type" => "str", "value" => null],
        "extended2" => ["type" => "str", "value" => null],
        "extended3" => ["type" => "str", "value" => null],
    ];
    // Getters
    public function getExtended1(): ?string
    {
        return $this->getField("extended1");
    }
    public function getExtended2(): ?string
    {
        return $this->getField("extended2");
    }
    public function getExtended3(): ?string
    {
        return $this->getField("extended3");
    }
    // Setters
    /**
    * setExtended1
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setExtended1(?string $newvalue): array
    {
        return $this->updateField("extended1", $newvalue);
    }
    /**
    * setExtended2
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setExtended2(?string $newvalue): array
    {
        return $this->updateField("extended2", $newvalue);
    }
    /**
    * setExtended3
    * @return mixed[] [status =>  bool, message =>  string]
    */
    public function setExtended3(?string $newvalue): array
    {
        return $this->updateField("extended3", $newvalue);
    }
    // Loaders
    public function loadByExtended1(string $extended1): bool
    {
        return $this->loadByField("extended1", $extended1);
    }
    public function loadByExtended2(string $extended2): bool
    {
        return $this->loadByField("extended2", $extended2);
    }
    public function loadByExtended3(string $extended3): bool
    {
        return $this->loadByField("extended3", $extended3);
    }
}
// please do not edit this file
