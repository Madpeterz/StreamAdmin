<?php

namespace App\Models\Sets;

use YAPF\Framework\Responses\DbObjects\SetsLoadReply as SetsLoadReply;
use YAPF\Framework\DbObjects\CollectionSet\CollectionSet as CollectionSet;
use YAPF\Framework\Responses\DbObjects\UpdateReply as UpdateReply;
use App\Models\Staff as Staff;

// Do not edit this file, rerun gen.php to update!
class StaffSet extends CollectionSet
{
    public function __construct()
    {
        parent::__construct("App\Models\Staff");
    }
    /**
     * getObjectByID
     * returns a object that matchs the selected id
     * returns null if not found
     * Note: Does not support bad Ids please use findObjectByField
     */
    public function getObjectByID($id): ?Staff
    {
        return parent::getObjectByID($id);
    }
    /**
     * getFirst
     * returns the first object in a collection
     */
    public function getFirst(): ?Staff
    {
        return parent::getFirst();
    }
    /**
     * getObjectByField
     * returns the first object in a collection that matchs the field and value checks
     */
    public function getObjectByField(string $fieldName, $value): ?Staff
    {
        return parent::getObjectByField($fieldName, $value);
    }
    /**
     * current
     * used by foreach to get the object should not be called directly
     */
    public function current(): Staff
    {
        return parent::current();
    }
    /**
     * uniqueIds
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueIds(): array
    {
        return parent::uniqueArray("id");
    }
    /**
     * uniqueUsernames
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueUsernames(): array
    {
        return parent::uniqueArray("username");
    }
    /**
     * uniqueEmailResetCodes
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueEmailResetCodes(): array
    {
        return parent::uniqueArray("emailResetCode");
    }
    /**
     * uniqueEmailResetExpiress
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueEmailResetExpiress(): array
    {
        return parent::uniqueArray("emailResetExpires");
    }
    /**
     * uniqueAvatarLinks
     * returns unique values from the collection matching that field
     * @return array<int>
     */
    public function uniqueAvatarLinks(): array
    {
        return parent::uniqueArray("avatarLink");
    }
    /**
     * uniquePhashs
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniquePhashs(): array
    {
        return parent::uniqueArray("phash");
    }
    /**
     * uniqueLhashs
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniqueLhashs(): array
    {
        return parent::uniqueArray("lhash");
    }
    /**
     * uniquePsalts
     * returns unique values from the collection matching that field
     * @return array<string>
     */
    public function uniquePsalts(): array
    {
        return parent::uniqueArray("psalt");
    }
    /**
     * uniqueOwnerLevels
     * returns unique values from the collection matching that field
     * @return array<bool>
     */
    public function uniqueOwnerLevels(): array
    {
        return parent::uniqueArray("ownerLevel");
    }
    // Loaders
    /**
     * loadById
    */
    public function loadById(
        int $id, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "id", 
            $id, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromIds
    */
    public function loadFromIds(array $values): SetsLoadReply
    {
        return $this->loadIndexes("id", $values);
    }
    /**
     * loadByUsername
    */
    public function loadByUsername(
        string $username, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "username", 
            $username, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromUsernames
    */
    public function loadFromUsernames(array $values): SetsLoadReply
    {
        return $this->loadIndexes("username", $values);
    }
    /**
     * loadByEmailResetCode
    */
    public function loadByEmailResetCode(
        string $emailResetCode, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "emailResetCode", 
            $emailResetCode, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromEmailResetCodes
    */
    public function loadFromEmailResetCodes(array $values): SetsLoadReply
    {
        return $this->loadIndexes("emailResetCode", $values);
    }
    /**
     * loadByEmailResetExpires
    */
    public function loadByEmailResetExpires(
        int $emailResetExpires, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "emailResetExpires", 
            $emailResetExpires, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromEmailResetExpiress
    */
    public function loadFromEmailResetExpiress(array $values): SetsLoadReply
    {
        return $this->loadIndexes("emailResetExpires", $values);
    }
    /**
     * loadByAvatarLink
    */
    public function loadByAvatarLink(
        int $avatarLink, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "avatarLink", 
            $avatarLink, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromAvatarLinks
    */
    public function loadFromAvatarLinks(array $values): SetsLoadReply
    {
        return $this->loadIndexes("avatarLink", $values);
    }
    /**
     * loadByPhash
    */
    public function loadByPhash(
        string $phash, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "phash", 
            $phash, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromPhashs
    */
    public function loadFromPhashs(array $values): SetsLoadReply
    {
        return $this->loadIndexes("phash", $values);
    }
    /**
     * loadByLhash
    */
    public function loadByLhash(
        string $lhash, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "lhash", 
            $lhash, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromLhashs
    */
    public function loadFromLhashs(array $values): SetsLoadReply
    {
        return $this->loadIndexes("lhash", $values);
    }
    /**
     * loadByPsalt
    */
    public function loadByPsalt(
        string $psalt, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "psalt", 
            $psalt, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromPsalts
    */
    public function loadFromPsalts(array $values): SetsLoadReply
    {
        return $this->loadIndexes("psalt", $values);
    }
    /**
     * loadByOwnerLevel
    */
    public function loadByOwnerLevel(
        bool $ownerLevel, 
        int $limit = 0, 
        string $orderBy = "id", 
        string $orderDir = "DESC"
    ): SetsLoadReply
    {
        return $this->loadOnField(
            "ownerLevel", 
            $ownerLevel, 
            $limit, 
            $orderBy, 
            $orderDir
        );
    }
    /**
     * loadFromOwnerLevels
    */
    public function loadFromOwnerLevels(array $values): SetsLoadReply
    {
        return $this->loadIndexes("ownerLevel", $values);
    }
    // Related loaders
    public function relatedAvatar(): AvatarSet
    {
        $ids = $this->uniqueAvatarLinks();
        $collection = new AvatarSet();
        $collection->loadFromIds($ids);
        return $collection;
    }
}
